ali################### API Related###################
1) Response Code List-->https://restfulapi.net/http-status-codes/
    i) 401 vs 403?
    ii) 405 vs 501?
    iii) 503 vs 500?

2) Put VS Patch vs POST

3) what is idempotency in rest apis?

4) Authentication vs Authorization

5) Serialization vs deserialization

6) what is json schema?:
JSON Schema is a way to validate the structure of your JSON data.
Think of it as a blueprint that defines what your JSON data should look like,
 including the types of values and the required fields.

7) What is swagger?


#### types of authentication in api ####

    1) HTTP Basic Authentication:
        This is a simple authentication scheme where the user's credentials (username and password)
        are encoded and sent with each request1.
        It's easy to implement but not very secure on its own.

    2)  API Key Authentication:
        An API key is a unique identifier issued to users to control access and monitor usage1.
        It's often used for simpler APIs and can be passed in the header or as a query parameter.

    3) JSON Web Token (JWT) Authentication:
         JWT is a compact, stateless authentication mechanism1.
         It encodes user information in a JSON object, which is then signed and sent with each request. It's widely used due to its scalability and security.

    4) OAuth:
        OAuth is a more complex authentication framework that allows third-party applications to
        obtain limited access to an HTTP service on behalf of the user2.
        It's commonly used for granting access to resources without sharing passwords.

    5) OpenID Connect:
        This is an authentication layer on top of OAuth 2.0, providing a way to verify the identity
        of the end-user based on the authentication performed by an Authorization Server2


################### REST ASSURED ###################
1) SSL
a)By Pass SSL: 
        RestAssured.useRelaxedHTTPSValidation();

b) Use SSL
        RestAssured.config().sslConfig(new SSLConfig()
            .keyStore("path/to/keystore.jks", "password")
            .trustStore("path/to/truststore.jks", "password"));

c) Set connection/socket timeout
        RestAssured.config().
                httpClient(HttpClientConfig.httpClientConfig().
                        setParam("http.socket.timeout", 1000).
                        setParam("http.connection.timeout", 1000));


https://stackoverflow.com/questions/7360520/connectiontimeout-versus-sockettimeout

Connection timeout: A connection timeout is the maximum amount of time that the program is willing to wait
to setup a connection to another process. You aren't getting or posting any application data
at this point, just establishing the connection, itself.

Socket timeout: A socket timeout is the timeout when waiting for individual packets.
 It's a common misconception that a socket timeout is the timeout to receive the full response.
 So if you have a socket timeout of 1 second, and a response comprised of 3 IP packets,
  where each response packet takes 0.9 seconds to arrive, for a total response time of 2.7 seconds,
   then there will be no timeout.

JsonPath: https://www.youtube.com/watch?v=WE_gOHDiVJU 
