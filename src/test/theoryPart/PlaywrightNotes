1) Architecture: It works on Websocket Protocol which is faster t



###############  Playwright Architecture  ###############

-Playwright works on Websocket Protocol which is faster than W3C protocol used by Selenium4

Playwright Features
 - Recording
 - Tracing
 - Auto Wait
 - Possibllity to save stogar state


###############  Playwright Setup and Execute Script  ###############

- Start Playwright Maximize window 
  - Create Browser with lauchoptions
    BrowserType.LaunchOptions lp = new BrowserType.LaunchOptions();
    lp.setArgs("--start-maximized");
    playwright.chromium().launch(lp);
   

- Start Playwright With Video Recording 
  - Create BrowserContext with contextOptions
        Browser.NewContextOptions contextOptions = new Browser.NewContextOptions();
        contextOptions.setRecordVideoDir(Paths.get(recordingDirPath));
        contextOptions.setRecordVideoSize(640, 480);

        //Creating New Browser Context for each Test
        context = browser.newContext(contextOptions);

  - Close Recording
       context.close()
    
- Start Playwright With Trace
	-  Start tracing before creating / navigating a page.
        context.tracing().start(new Tracing.StartOptions().setScreenshots(true).setTitle("My trace").setName("trace").setSnapshots(true).setSources(true));


  - Close Recording
       context.close()
	   
	   

###############  6. Playwright Inspector  ###############
- Run from command line
mvn exec:java -e -D exec.mainClass=com.microsoft.playwright.CLI -D exec.args="codegen https://eaasrt.eaas.amdocs.com/sso/login?q=bz1odHRwcyUzQSUyRiUyRmVhYXNydC5lYWFzLmFtZG9jcy5jb20lMkZwb3J0YWwlMkYmdD0xNzIyMjQ5NzUzNDIy#go/AmdocsOSS/NetworkNavigator"


- Run from command line with debug mode
In Intellij, Go To Enviroment Variables, select PWDEBUG=-1

- To put debugger point in Inetllij 
page.pause()


###############  8. Playwright BrowserContext  ###############
- Can be ussed to create Multiple Browser Context which will not share cache/cookies and behave independendtly
  Use cases
   - Test Role based Access Control/ Permission based Access Control 
     - Make Changes from Staff user, then verify if staff or Admin can see the chnage
   - Test Chat Bot
     - OPen BrowserContext 1 and send some message
     - OPen BrowserContext 2 and send some other message
     - Verify  Messages are sent recieved in real time properly


###############  Playwright Actions ###############

1.Enter Text
page.locator("xpath").fill("text");
page.getByText("Login").getByRole(ARIAROLE.TEXT).fill("text");

2.Click Text
page.locator("xpath").click();
page.getByText("Login").getByRole(ARIAROLE.TEXT).click();

https://davidwalsh.name/demo/multiple-file-upload.php

3.UPload Single File
page.setInputFiles("xpath",Paths.get(""));

4.UPload Multiple File
page.setInputFiles("xpath", new Path[]{
							Paths.get("RT.json"),
							Paths.get("RT1.json")
									});

5.dis-select UPloaded File
page.setInputFiles("xpath",Path[0]);

5.download Single File
Download download= page.waitForDownaload(()->page.click("xpath"));

download.url();



6.Click nth Element
First: page.locator("xpath").first().click();
Last: page.locator("xpath").last().click();
nth: page.locator("xpath").nth(0).click();


### Types of Wait
//Implicit Wait
page.wait();//Implicit wait//default value is 0
page.wait(100);//Implicit wait//default value is 0

//Explicit Wait/Conditional Wait
            List<String> messages = new ArrayList<>(); 
            page.onConsoleMessage(m -> messages. add(m. text()));
            page.getByText("Submit button").click(); 
            page.waitForCondition(() -> messages. size() > 3);
			
//wait for Page to be loaded	
page.waitForLoadState(LoadState.DOMCONTENTLOADED);
page.waitForLoadState(LoadState.LOAD);
page.waitForLoadState(LoadState.NETWORKIDLE);


7.Keyboard/Mouse
Keyboard:
        newPage.keyboard().press("Control+A");
        newPage.keyboard().press("Control+C");

Mouse:

        // Perform a double-click at the center of the page
        newPage.mouse().dblclick(centerX, centerY);
